.TH "/home/erin/Desktop/qt6Upgrade/voldigate/dependencies/libwallaby/module/motor/public/kipr/motor/motor.h" 3 "Wed Sep 4 2024" "Version 1.0.0" "libkipr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/erin/Desktop/qt6Upgrade/voldigate/dependencies/libwallaby/module/motor/public/kipr/motor/motor.h
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBget_motor_position_counter\fP (int \fBmotor\fP)"
.br
.RI "Gets the current motor position\&. "
.ti -1c
.RI "int \fBgmpc\fP (int \fBmotor\fP)"
.br
.RI "Gets the current motor position\&. "
.ti -1c
.RI "void \fBclear_motor_position_counter\fP (int \fBmotor\fP)"
.br
.RI "Clears the motor position counter\&. "
.ti -1c
.RI "void \fBcmpc\fP (int \fBmotor\fP)"
.br
.RI "Clears the motor position counter\&. "
.ti -1c
.RI "int \fBmove_at_velocity\fP (int \fBmotor\fP, int velocity)"
.br
.RI "Set a goal velocity in ticks per second\&. "
.ti -1c
.RI "int \fBmav\fP (int \fBmotor\fP, int velocity)"
.br
.RI "Set a goal velocity in ticks per second\&. "
.ti -1c
.RI "int \fBmove_to_position\fP (int \fBmotor\fP, int speed, int goal_pos)"
.br
.RI "Set a goal position (in ticks) for the motor to move to\&. "
.ti -1c
.RI "int \fBmtp\fP (int \fBmotor\fP, int speed, int goal_pos)"
.br
.RI "Set a goal position (in ticks) for the motor to move to\&. "
.ti -1c
.RI "int \fBmove_relative_position\fP (int \fBmotor\fP, int speed, int delta_pos)"
.br
.RI "Set a goal position (in ticks) for the motor to move to, relative to the current position\&. "
.ti -1c
.RI "int \fBmrp\fP (int \fBmotor\fP, int speed, int delta_pos)"
.br
.RI "Set a goal position (in ticks) for the motor to move to, relative to the current position\&. "
.ti -1c
.RI "void \fBset_pid_gains\fP (int \fBmotor\fP, short p, short i, short d, short pd, short id, short dd)"
.br
.RI "Set the motor PID gains, represented as fractions\&. "
.ti -1c
.RI "void \fBget_pid_gains\fP (int \fBmotor\fP, short *p, short *i, short *d, short *pd, short *id, short *dd)"
.br
.RI "Set the motor PID gains, represented as fractions\&. "
.ti -1c
.RI "int \fBfreeze\fP (int \fBmotor\fP)"
.br
.RI "Active braking to stop a motor\&. "
.ti -1c
.RI "int \fBget_motor_done\fP (int \fBmotor\fP)"
.br
.RI "Check if the motor has reached it's goal\&. "
.ti -1c
.RI "void \fBblock_motor_done\fP (int \fBmotor\fP)"
.br
.RI "Wait until the motor is at it's goal\&. "
.ti -1c
.RI "void \fBbmd\fP (int \fBmotor\fP)"
.br
.RI "Wait until the motor is at it's goal\&. "
.ti -1c
.RI "int \fBsetpwm\fP (int \fBmotor\fP, int pwm)"
.br
.RI "Set the motor pwm (percent power) command\&. "
.ti -1c
.RI "int \fBgetpwm\fP (int \fBmotor\fP)"
.br
.RI "Get the current motor pwm command\&. "
.ti -1c
.RI "void \fBfd\fP (int \fBmotor\fP)"
.br
.RI "Moves the given motor forward at full power\&. "
.ti -1c
.RI "void \fBbk\fP (int \fBmotor\fP)"
.br
.RI "Moves the given motor backward at full power\&. "
.ti -1c
.RI "void \fBmotor\fP (int motor, int percent)"
.br
.RI "Moves a motor at a percent velocity\&. "
.ti -1c
.RI "void \fBbaasbennaguui\fP (int \fBmotor\fP, int percent)"
.br
.RI "Moves a motor at a percent velocity\&. "
.ti -1c
.RI "void \fBmotor_power\fP (int \fBmotor\fP, int percent)"
.br
.RI "Moves a motor at a percent power\&. "
.ti -1c
.RI "void \fBoff\fP (int \fBmotor\fP)"
.br
.RI "Turns the specified motor off\&. "
.ti -1c
.RI "void \fBalloff\fP ()"
.br
.RI "Turns all motors off\&. "
.ti -1c
.RI "void \fBao\fP ()"
.br
.RI "Turns all motors off\&. "
.in -1c
.SH "Detailed Description"
.PP 

.PP
\fBCopyright\fP
.RS 4
KISS Institute for Practical Robotics 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libkipr from the source code\&.
