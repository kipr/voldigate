.TH "digital" 3 "Wed Sep 4 2024" "Version 1.0.0" "libkipr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
digital \- Digitals
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBdigital\fP (int port)"
.br
.ti -1c
.RI "void \fBset_digital_value\fP (int port, int value)"
.br
.ti -1c
.RI "int \fBget_digital_value\fP (int port)"
.br
.ti -1c
.RI "void \fBset_digital_output\fP (int port, int out)"
.br
.ti -1c
.RI "int \fBget_digital_output\fP (int port)"
.br
.ti -1c
.RI "int \fBget_digital_pullup\fP (int port)"
.br
.ti -1c
.RI "void \fBset_digital_pullup\fP (int port, int pullup)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The functions here allow for reading the values of digital sensors\&. 
.SH "example_digital_touch"
.PP
Assuming that there is a touch sensor plugged into digital port 0, then the following code would move forward until the touch sensor was clicked\&. 
.PP
.nf
#include <kipr/wombat\&.h>

int main(){
     int touch_port_number = 0;

     while (digital(touch_port_number) != 1){
         // move
         motor(0, 100);
         motor(1, -100);
     }

     // stop moving
     ao();
     return 0;
}

.fi
.PP
 
.SH "Function Documentation"
.PP 
.SS "int digital (int port)"

.PP
\fBSee also\fP
.RS 4
\fBget_digital_value\fP 
.RE
.PP

.SS "int get_digital_output (int port)"
Gets the current digital mode 
.PP
\fBReturns\fP
.RS 4
1 for output mode, 0 for input mode 
.RE
.PP
\fBSee also\fP
.RS 4
\fBset_digital_value\fP 
.RE
.PP

.SS "int get_digital_pullup (int port)"
Gets the current digital pullup state 
.PP
\fBReturns\fP
.RS 4
1 for active, 0 for inactive 
.RE
.PP
\fBDeprecated\fP
.RS 4
not applicable on the Wallaby
.RE
.PP

.SS "int get_digital_value (int port)"
Gets the current value of the digital port\&. 
.PP
\fBReturns\fP
.RS 4
1 if the switch is closed, 0 if the switch is open 
.RE
.PP
\fBSee also\fP
.RS 4
\fBset_digital_value\fP 
.RE
.PP

.SS "void set_digital_output (int port, int out)"
Sets the digital mode\&. 
.PP
\fBParameters\fP
.RS 4
\fIport\fP The port to modify\&. 
.br
\fIout\fP 1 for output mode, 0 for input mode\&. 
.RE
.PP

.SS "void set_digital_pullup (int port, int pullup)"
Sets the current digital pullup state 
.PP
\fBParameters\fP
.RS 4
\fIport\fP The port to modify 
.br
\fIpullup\fP The pullup state 1: active 0: inactive 
.RE
.PP
\fBDeprecated\fP
.RS 4
not applicable on the Wallaby
.RE
.PP

.SS "void set_digital_value (int port, int value)"
Sets the value of the digital port in output mode\&. 
.PP
\fBSee also\fP
.RS 4
\fBget_digital_value\fP 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libkipr from the source code\&.
