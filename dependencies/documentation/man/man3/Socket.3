.TH "Socket" 3 "Wed Sep 4 2024" "Version 1.0.0" "libkipr" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Socket
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <socket\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSocket\fP ()"
.br
.ti -1c
.RI "bool \fBopen\fP (int domain, int type, int protocol)"
.br
.ti -1c
.RI "bool \fBisOpen\fP () const"
.br
.ti -1c
.RI "bool \fBsetBlocking\fP (const bool blocking)"
.br
.ti -1c
.RI "bool \fBsetReusable\fP (const bool reusable)"
.br
.ti -1c
.RI "bool \fBbind\fP (const unsigned short port)"
.br
.ti -1c
.RI "bool \fBconnect\fP (const \fBAddress\fP &addr)"
.br
.ti -1c
.RI "bool \fBdisconnect\fP ()"
.br
.ti -1c
.RI "bool \fBclose\fP ()"
.br
.ti -1c
.RI "ssize_t \fBrecv\fP (void *const buffer, const size_t length, int flags=0)"
.br
.ti -1c
.RI "ssize_t \fBrecvfrom\fP (void *const buffer, const size_t length, \fBAddress\fP &address, int flags=0)"
.br
.ti -1c
.RI "ssize_t \fBsend\fP (const void *const buffer, const size_t length, int flags=0)"
.br
.ti -1c
.RI "ssize_t \fBsendto\fP (const void *const buffer, const size_t length, const \fBAddress\fP &dest, int flags=0)"
.br
.ti -1c
.RI "\fBsocket_fd_t\fP \fBfd\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBSocket\fP \fBudp\fP ()"
.br
.ti -1c
.RI "static \fBSocket\fP \fBtcp\fP ()"
.br
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Socket::Socket ()"

.SH "Member Function Documentation"
.PP 
.SS "bool Socket::bind (const unsigned short port)"

.SS "bool Socket::close ()"

.SS "bool Socket::connect (const \fBAddress\fP & addr)"

.SS "bool Socket::disconnect ()"

.SS "\fBsocket_fd_t\fP Socket::fd () const"

.SS "bool Socket::isOpen () const"

.SS "bool Socket::open (int domain, int type, int protocol)"

.SS "ssize_t Socket::recv (void *const buffer, const size_t length, int flags = \fC0\fP)"

.SS "ssize_t Socket::recvfrom (void *const buffer, const size_t length, \fBAddress\fP & address, int flags = \fC0\fP)"

.SS "ssize_t Socket::send (const void *const buffer, const size_t length, int flags = \fC0\fP)"

.SS "ssize_t Socket::sendto (const void *const buffer, const size_t length, const \fBAddress\fP & dest, int flags = \fC0\fP)"

.SS "bool Socket::setBlocking (const bool blocking)"

.SS "bool Socket::setReusable (const bool reusable)"

.SS "static \fBSocket\fP Socket::tcp ()\fC [static]\fP"

.SS "static \fBSocket\fP Socket::udp ()\fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for libkipr from the source code\&.
